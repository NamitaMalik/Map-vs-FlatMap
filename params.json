{
  "name": "Map vs FlatMap",
  "tagline": "This blog discusses difference between Map and FlatMap in RxJS.",
  "body": "# Map vs FlatMap\r\n\r\nAnyone who has worked upon/read about **RXJS** must be aware about various operators that this library includes, some of them are:\r\n\r\n1. **0f** - It simply converts a list of arguments into an **Observable** sequence.\r\n2. **from** - Creates an **Observable** sequence from an array or an object that can be iterated.\r\n3. **map** - Transforms each element of the **Observable** sequence. Can be considered similar to **map** function of **Array**.\r\n4. **subscribe** - This operator is basically the connecting point between an **Observer** and **Observable**. An **Observer** receives item/error/completion notification from \r\n    **Observable** using the **subscribe** operator. A **cold observable** would start emitting value only when an **observer** subscribes to it. \r\n\r\nThe above ones are like most commonly used and you would get to know many new ones. \r\n\r\nWell, I encountered a situation where I had **Observable** of **Observables** and I wanted a single stream out of them and to solve this I got introduced to another interesting operator:\r\n\r\n**flatMap** - It basically **merges an observable sequence of observable sequences into a single observable sequence.**\r\n\r\nSo, let's take a sample snippet to see how the it works. We have an array of visitors as given below:\r\n\r\n```JavaScript\r\nlet visitors = [\r\n    \"Namita\",\r\n    \"Amit\",\r\n    \"Rohit\",\r\n    \"Neetika\"\r\n];\r\n```\r\n\r\nNow, we want this array to be converted into an **Observable** sequence, so it can be done something like:\r\n\r\n```JavaScript\r\nlet source = Rx.Observable.from(visitors)\r\n    .map(x => 'Hello ' + x);\r\n```\r\n\r\nWe will now have to subscribe to this sequence:\r\n\r\n```JavaScript\r\nsource.subscribe(x => document.getElementById('flatMap').innerText += x + \"\\n\");\r\n```\r\n\r\nAnd view would look like this:\r\n\r\n![map-flatMap.png](https://raw.githubusercontent.com/NamitaMalik/Map-vs-FlatMap/master/assets/map-flatMap.png)\r\n\r\n\r\nBut what we wanted to see was how to work with **observable of observable sequence**, so for that let's make some changes as given below:\r\n\r\n```JavaScript\r\nlet source = Rx.Observable.from(visitors)\r\n    .map(x => Rx.Observable.of('Hello ' + x));\r\n```\r\n\r\n... and our view would look something like this:\r\n\r\n![Map-error.png](https://raw.githubusercontent.com/NamitaMalik/Map-vs-FlatMap/master/assets/Map-error.png)\r\n\r\nSo how to fix this up? Well, now we'll have to use our **flatMap** operator as given below:\r\n\r\n```JavaScript\r\nlet source = Rx.Observable.from(visitors)\r\n    .flatMap(x => Rx.Observable.of('Hello ' + x));\r\n```\r\n\r\nand now one can simply subscribe to it as we were doing earlier and our view as per our expectations:\r\n\r\n![map-flatMap.png](https://raw.githubusercontent.com/NamitaMalik/Map-vs-FlatMap/master/assets/map-flatMap.png)\r\n\r\nSo what's the exact difference between **map** and **flatMap**:\r\n\r\n**map** transforms items emitted by an Observable by applying a function to each item whereas **flatmap**:\r\n\r\n1. Applies a specified function to each emitted item and this function in turn returns an Observable for each item.\r\n2. flatMap then merges all these sequences to make a new sequence.\r\n    \r\nSo let's make a small ASCII marbel to make our understanding more clear:\r\n  \r\n```\r\n----Namita---Amit---Rohit---Neetika----- //Input Stream\r\n.map(x => 'Hello ' + x);\r\n---Hello Namita---Hello Amit---Hello Rohit---Hello Neetika--- //Map's function result\r\n```  \r\n  \r\n```\r\n----Namita---Amit---Rohit---Neetika----- //Input Stream\r\n.flatMap(x => Rx.Observable.of('Hello ' + x))\r\n--Hello Namita--     //transforming each input element into an Observable\r\n--Hello Amit--\r\n--Hello Rohit--\r\n--Hello Neetika--\r\n---Hello Namita---Hello Amit---Hello Rohit---Hello Neetika--- // Flatmap's final result\r\n```\r\n\r\nThere is also another operator named as **.mergeAll** which we can use with **map** when we are in observable of observables situation instead of directly using **flatMap**. **RxJS** has numerous operators and hopefully this learning\r\nvoyage will take us to each one of them.. till then happy learning!\r\n\r\nFollow Me\r\n---\r\n[Github](https://github.com/NamitaMalik)\r\n\r\n[Twitter](https://twitter.com/namita13_04)\r\n\r\n[LinkedIn](https://in.linkedin.com/in/namita-malik-a7885b23)\r\n\r\n[More Blogs By Me](https://namitamalik.github.io/)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}